apply plugin: 'maven-publish'
apply plugin: 'signing'

File file = project.file('maven-publish.properties')
if (!file.exists()) return

// 读取模块目录的 maven-publish.properties
def properties = new Properties()
properties.load(project.file('maven-publish.properties').newDataInputStream())

// 读取签名信息
ext["signing.keyId"] = properties.get("signing.keyId")
ext["signing.password"] = properties.get("signing.password")
ext["signing.secretKeyRingFile"] = properties.get("signing.secretKeyRingFile")
ext["ossrhUsername"] = properties.get("ossrhUsername")
ext["ossrhPassword"] = properties.get("ossrhPassword")

// 读取项目配置信息
def GROUP_ID = properties.get("maven.groupId")
def ARTIFACT_ID = properties.get("maven.artifactId")
def VERSION = properties.get("maven.version")
def IS_SNAPSHOT = properties.get("maven.snapshot")
def IS_JAR = properties.get("maven.isJar").toBoolean()

task sourceJar(type: Jar) {
    if (IS_JAR) {
        from sourceSets.main.java.srcDirs
    } else {
        from android.sourceSets.main.java.srcDirs
    }
    archiveClassifier = "sources"
}

afterEvaluate {
    publishing {
        publications { PublicationContainer publicationContainer ->
            maven(MavenPublication) {
                artifact sourceJar // 上传源码
                if (IS_JAR) {
                    artifact "$buildDir/libs/${project.name}.jar"
                } else {
                    artifact "$buildDir/outputs/aar/${project.name}-release.aar"
                }
                groupId = GROUP_ID
                artifactId = ARTIFACT_ID
                // 是否为 SNAPSHOT 版本
                if (IS_SNAPSHOT) {
                    version = "${VERSION}-SNAPSHOT"
                } else {
                    version = VERSION
                }

                pom {
                    withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')
                        project.configurations.implementation.allDependencies.each {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }

        // 配置maven 仓库
        repositories { RepositoryHandler handler ->
            maven {
                // This is an arbitrary name, you may also use "mavencentral" or
                // any other name that's descriptive for you
                name = "teemo"

                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                // You only need this if you want to publish snapshots, otherwise just set the URL
                // to the release repo directly
                url = IS_SNAPSHOT ? snapshotsRepoUrl : releasesRepoUrl

                // The username and password we've fetched earlier
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}


signing {
    sign publishing.publications
}